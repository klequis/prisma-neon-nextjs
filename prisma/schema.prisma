generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Item {
  id           Int       @id @default(autoincrement())
  // id String @id @default(uuid())                 // can do this
  title        String    
  notes        Note[]
  contacts     Contact[]
  dueAt        DateTime? @map("due_at")
  completedAt  DateTime? @map("completed_at")
  createdAt   DateTime  @default(now()) @map("created_at")
  modifiedAt  DateTime  @updatedAt @map("modified_at")

  @@map("items")
}

model Note {
  id          Int      @id @default(autoincrement())
  body        String
  item        Item     @relation(fields: [item_id], references: [id])
  item_id     Int // scalar field
  createdAt  DateTime @default(now()) @map("created_at")
  modifiedAt DateTime @updatedAt @map("modified_at")

  @@map("notes")
}

model Contact {
  id          Int      @id @default(autoincrement())
  name        String
  phones      Phone[]
  item        Item     @relation(fields: [item_id], references: [id])
  item_id     Int
  createdAt  DateTime @default(now()) @map("created_at")
  modifiedAt DateTime @updatedAt @map("modified_at")

  @@map("contacts")
}

model Phone {
  id         Int     @id @default(autoincrement())
  phone      String
  phoneType String @map("phone_type")
  contact    Contact @relation(fields: [contact_id], references: [id])
  contact_id Int

  @@map("phones")
}
